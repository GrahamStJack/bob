# Example bundle file.
#
# A project has one bub.cfg file, but possibly many bundle files, found
# transitively from the BUNDLES variable in bub.cfg.
#
# This separation facilitates breaking up source code into multiple repos
# and/or directories, and reusing code between projects.
#
# Top-level packages in CONTAIN variables have to be defined in order, from
# lowest-level to highest-level.
#
# Required variables are:
#
#   BUNDLES - Relative paths to other bundle files. Can be empty, and the same bundle
#             may be reached via different references.
#   REPO    - Relative path to the directory containing the source code repo that
#             contains this bundle file.
#   ROOTS   - Relative paths to directories containing the top-level packages of
#             interest in this bundle file's repo.
#   CONTAIN - The names of the required top-level packages under the ROOTS,
#             in increasing dependency order (lowest level first).
#
# Multiple instances of these variables are allowed in the same bundle file,
# and they will be processed as they are encountered.

BUNDLES =
REPO    = ..
ROOT    = .
CONTAIN = base based util main
